name: Build macOS Universal .app

on:
  push:
    tags:
      - 'v*'   # Example: v2.6.0
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build-macos:
    name: Build for macOS (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt pyinstaller

      - name: Build .app for ${{ matrix.arch }}
        run: |
          source venv/bin/activate
          mkdir -p dist/${{ matrix.arch }}
          # Build the architecture-specific app
          env ARCHFLAGS="-arch ${{ matrix.arch }}" \
            pyinstaller --onefile --windowed \
              --name "Cancer Protein Research-${{ matrix.arch }}" \
              cancer_research_by_python.py
          mv dist/*.app dist/${{ matrix.arch }}/

      - name: Upload architecture build
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}
          path: dist/${{ matrix.arch }}/

  merge-universal:
    name: Merge into Universal Binary
    runs-on: macos-latest
    needs: build-macos

    steps:
      - name: Download both builds
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Combine architectures with lipo
        run: |
          mkdir -p "dist/universal/Cancer Protein Research.app/Contents/MacOS"
          # Copy Intel app bundle as base
          cp -R "dist/macos-x86_64/Cancer Protein Research-x86_64.app/" "dist/universal/Cancer Protein Research.app"
          # Merge executables into a universal Mach-O binary
          lipo -create \
            "dist/macos-x86_64/Cancer Protein Research-x86_64.app/Contents/MacOS/Cancer Protein Research-x86_64" \
            "dist/macos-arm64/Cancer Protein Research-arm64.app/Contents/MacOS/Cancer Protein Research-arm64" \
            -output "dist/universal/Cancer Protein Research.app/Contents/MacOS/Cancer Protein Research"
          # Make executable
          chmod +x "dist/universal/Cancer Protein Research.app/Contents/MacOS/Cancer Protein Research"

      - name: Zip Universal App
        run: |
          cd dist/universal
          zip -r "../../Cancer_Protein_Research_macOS_universal.zip" "Cancer Protein Research.app"

      - name: Upload Universal Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Cancer_Protein_Research_macOS_universal
          path: Cancer_Protein_Research_macOS_universal.zip

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: merge-universal
    steps:
      - name: Download universal artifact
        uses: actions/download-artifact@v4
        with:
          name: Cancer_Protein_Research_macOS_universal
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/Cancer_Protein_Research_macOS_universal.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
