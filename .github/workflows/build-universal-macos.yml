name: macOS Build

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, macos-12]
        python-version: ['3.10']
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
    - name: Configure git core.longpaths
      run: git config --global core.longpaths true

    - name: Checkout with retry
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        lfs: false
      continue-on-error: true
      id: checkout
      
    - name: Retry Checkout on Failure
      if: steps.checkout.outcome == 'failure'
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        lfs: false

    - name: Setup micromamba with aggressive retry
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        cache-environment: true
        cache-downloads: true
        post-cleanup: 'all'
        init-shell: bash
        create-args: >-
          python=${{ matrix.python-version }}
      env:
        ACTIONS_STEP_DEBUG: true
      id: micromamba-setup
      continue-on-error: true

    - name: Retry micromamba setup if failed
      if: steps.micromamba-setup.outcome == 'failure'
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        cache-environment: false
        cache-downloads: false
        post-cleanup: 'all'
        init-shell: bash
        create-args: >-
          python=${{ matrix.python-version }}

    - name: Install dependencies (with fallback to pip)
      shell: bash -l {0}
      run: |
        # Try conda/micromamba installs first
        micromamba install -c conda-forge openmm pdbfixer -y || true
        
        # Fallback to pip if needed
        pip install --no-cache-dir biopython requests numpy
        
        # Verify installation
        python -c "import openmm; import pdbfixer; import Bio; import numpy; print('All imports successful!')"

    - name: Run tests
      shell: bash -l {0}
      run: |
        python -m pytest tests/ -v

    - name: Build application
      shell: bash -l {0}
      run: |
        python setup.py build

    # Add this step if you want to upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cancer-protein-research-${{ matrix.os }}
        path: |
          build/
          dist/
        retention-days: 7

